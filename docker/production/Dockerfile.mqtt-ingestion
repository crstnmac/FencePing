# Multi-stage build for MQTT ingestion service
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY turbo.json ./
COPY packages/shared/package*.json ./packages/shared/
COPY apps/mqtt-ingestion/package*.json ./apps/mqtt-ingestion/

# Install dependencies including optional packages
RUN npm ci --include=optional && npm cache clean --force

# Build the source code
FROM base AS builder
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules

# Set turbo environment for Docker builds
ENV TURBO_DAEMON=false
ENV CI=1

# Build shared packages first
RUN npm run build:packages

# Build MQTT ingestion service
RUN npm run build:mqtt-ingestion

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 mqtt-ingestion

# Copy built application
COPY --from=builder --chown=mqtt-ingestion:nodejs /app/apps/mqtt-ingestion/dist ./dist
COPY --from=builder --chown=mqtt-ingestion:nodejs /app/packages/shared/dist ./packages/shared/dist
COPY --from=deps --chown=mqtt-ingestion:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=mqtt-ingestion:nodejs /app/package*.json ./
COPY --from=builder --chown=mqtt-ingestion:nodejs /app/packages/shared/package*.json ./packages/shared/
COPY --from=builder --chown=mqtt-ingestion:nodejs /app/apps/mqtt-ingestion/package*.json ./apps/mqtt-ingestion/

USER mqtt-ingestion

# Health check via process check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD pgrep node || exit 1

CMD ["node", "apps/mqtt-ingestion/dist/index.js"]