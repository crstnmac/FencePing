# Multi-stage build for Next.js production
FROM node:20-slim AS base

# Install basic system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY turbo.json ./
COPY packages/shared/package*.json ./packages/shared/
COPY apps/dashboard/package*.json ./apps/dashboard/

# Enable corepack to handle packageManager field
RUN corepack enable npm

# Install dependencies including optional packages
RUN npm ci --include=optional && npm cache clean --force

# Build the source code
FROM base AS builder
WORKDIR /app

# Enable corepack for build stage
RUN corepack enable npm

COPY . .
COPY --from=deps /app/node_modules ./node_modules

# Set turbo environment for Docker builds
ENV TURBO_DAEMON=false
ENV CI=1
ENV NEXT_TELEMETRY_DISABLED=1
ENV TURBOPACK=1

# Build shared packages first
RUN npm run build:packages

# Build dashboard with turbopack
RUN npm run build:dashboard

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/apps/dashboard/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/apps/dashboard/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/dashboard/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV HOSTNAME="0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

CMD ["node", "server.js"]